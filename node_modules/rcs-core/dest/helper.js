'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _fsExtra = require('fs-extra');

var _fsExtra2 = _interopRequireDefault(_fsExtra);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var saveSync = function saveSync(destinationPath, data) {
  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  if (!options.overwrite && _fsExtra2.default.existsSync(destinationPath)) {
    throw new Error('File exist and cannot be overwritten. Set the option overwrite to true to overwrite files.');
  }

  try {
    _fsExtra2.default.mkdirsSync(_path2.default.dirname(destinationPath));
    _fsExtra2.default.writeFileSync(destinationPath, data);
  } catch (err) {
    throw err;
  }
};

var save = function save(destinationPath, data, opts, cb) {
  // @todo check if the filepath has an .ext
  var callback = cb;
  var options = opts;

  // set cb if options are not set
  if (typeof options === 'function') {
    callback = options;
    options = {};
  }

  if (!options.overwrite && _fsExtra2.default.existsSync(destinationPath)) {
    return callback({
      message: 'File exist and cannot be overwritten. Set the option overwrite to true to overwrite files.'
    });
  }

  return _fsExtra2.default.mkdirs(_path2.default.dirname(destinationPath), function () {
    _fsExtra2.default.writeFile(destinationPath, data, function (err) {
      if (err) {
        return callback(err);
      }

      return callback(null, 'Successfully wrote ' + destinationPath);
    });
  });
}; // /save

exports.default = {
  saveSync: saveSync,
  save: save
};
module.exports = exports['default'];