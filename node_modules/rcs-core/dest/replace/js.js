'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _recast = require('recast');

var _recast2 = _interopRequireDefault(_recast);

var _astTraverse = require('ast-traverse');

var _astTraverse2 = _interopRequireDefault(_astTraverse);

var _selectorLibrary = require('../selectorLibrary');

var _selectorLibrary2 = _interopRequireDefault(_selectorLibrary);

var _string = require('./string');

var _string2 = _interopRequireDefault(_string);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var replaceJs = function replaceJs(code) {
  var regex = _selectorLibrary2.default.getAll({
    regex: true
  });

  var ast = _recast2.default.parse(code);

  (0, _astTraverse2.default)(ast, {
    pre: function pre(node) {
      if (node.type === 'Literal' && typeof node.value === 'string') {
        // eslint-disable-next-line no-param-reassign
        node.raw = node.raw.replace(node.raw, function (match) {
          return (0, _string2.default)(match, regex);
        });

        // add whitespaces before and after
        // to make the regex work
        var newValue = ' ' + node.value + ' ';
        var replacedValue = newValue.replace(newValue, function (match) {
          return (0, _string2.default)(match, regex);
        });

        // eslint-disable-next-line no-param-reassign
        node.value = replacedValue.slice(1, replacedValue.length - 1);
      }
    }
  });

  return _recast2.default.print(ast).code;
};

exports.default = replaceJs;
module.exports = exports['default'];