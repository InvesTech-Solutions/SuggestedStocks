'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _selectorLibrary = require('../selectorLibrary');

var _selectorLibrary2 = _interopRequireDefault(_selectorLibrary);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var replaceString = function replaceString(string, regex) {
  var splitter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ' ';

  var result = void 0;
  var tempString = string;

  // save the string characters
  var beginChar = string.charAt(0);
  var endChar = string.charAt(string.length - 1);

  // remove the string characters
  tempString = tempString.slice(1, tempString.length - 1);

  var stringArray = tempString.split(splitter);

  // replace every single entry
  stringArray = stringArray.map(function (element) {
    if (element.length === 0) {
      return element;
    }

    var tempElement = element;

    // eslint-disable-next-line consistent-return
    ['.', '#', ','].forEach(function (toSplit) {
      if (element.indexOf(toSplit) > '-1') {
        tempElement = replaceString('\'' + tempElement + '\'', regex, toSplit);
        tempElement = tempElement.slice(1, tempElement.length - 1);

        return tempElement;
      }
    });

    // add whitespace at the beginning and the end
    tempElement = ' ' + tempElement + ' ';

    tempElement = tempElement.replace(regex, function (match) {
      var matchBeginChar = match.charAt(0);
      var matchEndChar = match.charAt(match.length - 1);

      var toGet = match.slice(1, match.length - 1);

      return matchBeginChar + _selectorLibrary2.default.get(toGet) + matchEndChar;
    });

    // remove the string characters
    tempElement = tempElement.slice(1, tempElement.length - 1);

    return tempElement;
  });

  result = stringArray.join(splitter);

  // add the string characters
  result = beginChar + result + endChar;

  return result;
}; // /replaceString

exports.default = replaceString;
module.exports = exports['default'];