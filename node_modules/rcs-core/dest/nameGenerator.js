'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _decimalToAny = require('decimal-to-any');

var _decimalToAny2 = _interopRequireDefault(_decimalToAny);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var NameGenerator = function () {
  function NameGenerator() {
    _classCallCheck(this, NameGenerator);

    this.nameCounter = 1;
    this.decToAnyOptions = {
      alphabet: 'etnrisouaflchpdvmgybwxk_jqz'
    };
  }

  _createClass(NameGenerator, [{
    key: 'setAlphabet',
    value: function setAlphabet(alphabet) {
      this.nameCounter = 1;
      this.decToAnyOptions.alphabet = alphabet;
    }
  }, {
    key: 'generate',
    value: function generate() {
      var generatedName = (0, _decimalToAny2.default)(this.nameCounter, this.decToAnyOptions.alphabet.length, this.decToAnyOptions);

      this.nameCounter += 1;

      return generatedName;
    }
  }, {
    key: 'reset',
    value: function reset() {
      this.nameCounter = 1;
    }
  }]);

  return NameGenerator;
}();

exports.default = new NameGenerator();
module.exports = exports['default'];